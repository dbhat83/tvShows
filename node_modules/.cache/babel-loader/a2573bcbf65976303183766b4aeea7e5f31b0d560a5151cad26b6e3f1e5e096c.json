{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n\n// const ShowList = ({ onSelectShow }) => {\n//   const [shows, setShows] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"https://api.tvmaze.com/search/shows?q=all\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setShows(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching shows:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Show List</h2>\n//       <ul>\n//         {shows.map((show) => (\n//           <li key={show.show.id}>\n//             <h3>{show.show.name}</h3>\n//             <p>{show.show.summary}</p>\n//             <button onClick={() => onSelectShow(show)}>View Summary</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowList;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const ShowList = ({ onSelectShow }) => {\n//   const [shows, setShows] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"https://api.tvmaze.com/search/shows?q=all\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setShows(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching shows:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Show List</h2>\n//       <ul>\n//         {shows.map((show) => (\n//           <li key={show.show.id}>\n//             <h3>{show.show.name}</h3>\n//             <p>{show.show.summary}</p>\n//             <button onClick={() => onSelectShow(show)}>View Summary</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowList;","map":{"version":3,"names":[],"sources":["/Users/danishbhat/Desktop/htmltest/tvmaze/src/components/ShowList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// const ShowList = ({ onSelectShow }) => {\n//   const [shows, setShows] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"https://api.tvmaze.com/search/shows?q=all\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setShows(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching shows:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Show List</h2>\n//       <ul>\n//         {shows.map((show) => (\n//           <li key={show.show.id}>\n//             <h3>{show.show.name}</h3>\n//             <p>{show.show.summary}</p>\n//             <button onClick={() => onSelectShow(show)}>View Summary</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowList;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const ShowList = ({ onSelectShow }) => {\n//   const [shows, setShows] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"https://api.tvmaze.com/search/shows?q=all\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setShows(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching shows:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Show List</h2>\n//       <ul>\n//         {shows.map((show) => (\n//           <li key={show.show.id}>\n//             <h3>{show.show.name}</h3>\n//             <p>{show.show.summary}</p>\n//             <button onClick={() => onSelectShow(show)}>View Summary</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowList;\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}