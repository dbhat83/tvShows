{"ast":null,"code":"var _jsxFileName = \"/Users/danishbhat/Desktop/htmltest/tvmaze/src/components/ShowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowList = _ref => {\n  _s();\n  let {\n    onSelectShow\n  } = _ref;\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.tvmaze.com/search/shows?q=all\").then(response => response.json()).then(data => {\n      setShows(data);\n    }).catch(error => {\n      console.error(\"Error fetching shows:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Show List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: shows.map(show => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [console.log(show), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: show.show.image,\n          alt: show.show.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: show.show.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: show.show.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectShow(show),\n          children: \"View Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, show.show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowList, \"lt4sKoljhgDY9nzMRkpzzWWHEHs=\");\n_c = ShowList;\nexport default ShowList;\nvar _c;\n$RefreshReg$(_c, \"ShowList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShowList","_ref","_s","onSelectShow","shows","setShows","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","show","log","src","image","alt","name","summary","onClick","id","_c","$RefreshReg$"],"sources":["/Users/danishbhat/Desktop/htmltest/tvmaze/src/components/ShowList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst ShowList = ({ onSelectShow }) => {\n  const [shows, setShows] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.tvmaze.com/search/shows?q=all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setShows(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching shows:\", error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Show List</h2>\n      <ul>\n        {shows.map((show) => (\n          <li key={show.show.id}>\n            {console.log(show)}\n            <img src={show.show.image} alt={show.show.name}/>\n            <h3>{show.show.name}</h3>\n            <p>{show.show.summary}</p>\n            <button onClick={() => onSelectShow(show)}>View Summary</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ShowList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAAe,QAAA,EACGV,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAAe,QAAA,GACGD,OAAO,CAACQ,GAAG,CAACD,IAAI,CAAC,eAClBrB,OAAA;UAAKuB,GAAG,EAAEF,IAAI,CAACA,IAAI,CAACG,KAAM;UAACC,GAAG,EAAEJ,IAAI,CAACA,IAAI,CAACK;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjDnB,OAAA;UAAAe,QAAA,EAAKM,IAAI,CAACA,IAAI,CAACK;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBnB,OAAA;UAAAe,QAAA,EAAIM,IAAI,CAACA,IAAI,CAACM;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnB,OAAA;UAAQ4B,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACiB,IAAI,CAAE;UAAAN,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALzDE,IAAI,CAACA,IAAI,CAACQ,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}